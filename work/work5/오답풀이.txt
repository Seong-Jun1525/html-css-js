개인 오답 풀이

5. HTML문서 내의 요소로 접근하는 경우 다음 조건에 따라 접근 방식을 작성하시오.
    b. span 요소 : querySelectorAll("span")
    c. class 속성이 area 인 요소 : querySelectorAll(".area")
    -> 태그와 class 같은 경우는 여러개 선택할 때 주로 사용되기 때문에 querySelectorAll로 써야함

11. 아래와 같이 객체를 생성하고자 할 때 필요한 생성자 함수를 작성하시오.
------------------------------------------------------------------
window.onload = function() {
const dog1 = new Animal(“밀크”, “푸들”, 8, 5);
console.log(dog1);
}
// console 창 출력 결과
이름은 밀크이고, 종은 푸들이고, 8살이고, 5kg 입니다.
------------------------------------------------------------------
function Animal(name, kind, age, weight) {
    this.name = name;
    this.kind = kind;
    this.age = age;
    this.weight = weight;

    this.toString = function() {
        return `이름은 ${this.name}이고, 종은 ${this.kind}이고, ${this.age}살이고, ${this.weight}kg 입니다.`;
    }
}
=> 나이를 못봤다...문제를 잘 읽자

12. 객체의 속성에 접근하는 방법을 제시하시오.
[]를 사용하여 객체명.["속성명"]
.을 사용하여 객체명.속성명

=> []방법은 배웠지만 써본적이 없다보니 기억이 안나서 this를 써버렸다..
다시 공부할 필요있음

13. 다음 스크립트의 실행 결과를 작성하시오.
------------------------------------------------------------------
const arr = [“일”, “이”, “삼”, “사”, “오”];
for(let item in arr) {
console.log(item);
}
------------------------------------------------------------------
0
1
2
3
4
=> of가 아니다 in이다 in은 인덱스 값을 반환한다

14. 다음 스크립트 실행 시 오류가 발생했는데, 발생한 이유와 해결방안을 작성하시오.
------------------------------------------------------------------
const test = "테스트1";
test = "테스트2";
console.log(test);
[오류 내용]
Uncaught TypeError: Assignment to constant variable.
------------------------------------------------------------------
let test = "테스트1";
test = "테스트2";
console.log(test);
const타입은 재할당 불가. let을 사용해야 재할당 가능
=> 해결방안도 써야 하는데 왜 안썼지..

추가로 정규식표현에서 ^와 $를 빼먹었습니다..

결론 문제 제대로 안읽고 급하게 푼거같다..
몇개는 진짜 몰랐지만 몇개는 아는건데 틀렸다..ㅠ